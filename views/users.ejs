<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User List</title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/style.css">
</head>
<body>
    <div class="container my-5">
        <h1 class="text-danger mb-4">User List</h1>
        
        <!-- Add User Button -->
        <button class="btn btn-danger mb-3" data-bs-toggle="modal" data-bs-target="#addUserModal">
            Add New User
        </button>
        
        <!-- User Table -->
        <table class="table table-hover table-striped">
            <thead class="table-dark">
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Email</th>
                    <th scope="col">Phone</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody id="users-list">
                <% if (users && users.length > 0) { %>
                 <% users.forEach(user => { %>
                    <tr data-id="<%= user._id %>">
                        <td><%= user.name %></td>
                        <td><%= user.email %></td>
                        <td><%= user.phone %></td>
                        <td>
                            <!-- Edit Button -->
                            <button class="btn btn-sm btn-outline-danger edit-btn" data-id="<%= user._id %>"  data-bs-toggle="modal" data-bs-target="#editUserModal">
                                <i class="bi bi-pencil-fill"></i> Edit
                            </button>
                            <!-- Delete Button -->
                            <button  class="btn btn-sm delete-btn btn-outline-danger" data-id="<%= user._id %>">
                                <i class="bi bi-trash-fill"></i> Delete
                            </button>
                        </td>
                    </tr>
                 <% }) %>
                <% } %>
                
            </tbody>
        </table>
    </div>

    <!-- Add User Modal -->
    <div class="modal fade" id="addUserModal" tabindex="-1" aria-labelledby="addUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger" id="addUserModalLabel">Add New User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="add-form">
                        <div class="mb-3">
                            <label for="name" class="form-label">Name</label>
                            <input type="text" name="name" class="form-control" id="name" required>
                        </div>
                        <div class="mb-3">
                            <label for="email" class="form-label">Email</label>
                            <input type="email" name="email" class="form-control" id="email" required>
                        </div>
                        <div class="mb-3">
                            <label for="phone" class="form-label">Phone</label>
                            <input type="tel" name="phone" class="form-control" id="phone" required>
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Add User</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit User Modal -->
    <div class="modal fade" id="editUserModal" tabindex="-1" aria-labelledby="editUserModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title text-danger" id="editUserModalLabel">Edit User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="edit-form">
                        <div class="mb-3">
                            <input type="hidden" id="edit-id">
                            <label for="edit-name" class="form-label">Name</label>
                            <input type="text" class="form-control" id="edit-name" required>
                        </div>
                        <div class="mb-3">
                            <label for="edit-email" class="form-label">Email</label>
                            <input type="email" class="form-control" id="edit-email" required>
                        </div>
                        <div class="mb-3">
                            <label for="edit-phone" class="form-label">Phone</label>
                            <input type="tel" class="form-control" id="edit-phone" required>
                        </div>
                        <button type="submit" class="btn btn-danger w-100">Save Changes</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Bootstrap JS (with Popper.js for modal functionality) -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <script>
        document.addEventListener("DOMContentLoaded", () => {
    const usersList = document.getElementById('users-list');

    // Handle Add User Form Submission (unchanged)
    const addForm = document.getElementById('add-form');
    addForm.addEventListener('submit', async (event) => {
        event.preventDefault();
        const name = document.getElementById('name').value.trim();
        const email = document.getElementById('email').value.trim();
        const phone = document.getElementById('phone').value.trim();
        const data = { name, email, phone };

        try {
            const response = await fetch('/users', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data),
            });
            const result = await response.json();

            if (result.success) {
                const addUserModalElement = document.getElementById('addUserModal');
                const addUserModal = bootstrap.Modal.getInstance(addUserModalElement);
                addUserModal.hide();

                const newRow = document.createElement('tr');
                newRow.setAttribute('data-id', result.user._id);
                newRow.innerHTML = `
                    <td>${result.user.name}</td>
                    <td>${result.user.email}</td>
                    <td>${result.user.phone}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-danger edit-btn" data-id="${result.user._id}" data-bs-toggle="modal" data-bs-target="#editUserModal">
                            <i class="bi bi-pencil-fill"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${result.user._id}">
                            <i class="bi bi-trash-fill"></i> Delete
                        </button>
                    </td>
                `;
                usersList.appendChild(newRow);
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });

    // Handle Delete Button Click
    usersList.addEventListener('click', (event) => {
        if (event.target.classList.contains('delete-btn')) {
            const button = event.target.closest('button');
            const userId = button.getAttribute('data-id');

            // Confirm before deleting
            if (confirm('Are you sure you want to delete this user?')) {
                fetch(`/users/${userId}`, {
                    method: 'DELETE',
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Remove the row from the table
                            const rowToDelete = usersList.querySelector(`tr[data-id="${userId}"]`);
                            rowToDelete.remove();
                        } else {
                            console.error('Error deleting user:', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        }
    });

    // Handle Edit Button Click (unchanged)
    usersList.addEventListener('click', (event) => {
        if (event.target.classList.contains('edit-btn')) {
            const button = event.target.closest('button');
            const userId = button.getAttribute('data-id');

            // Fetch user data and populate the edit modal
            fetch(`/users/${userId}`,)
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('edit-id').value = data.user._id;
                        document.getElementById('edit-name').value = data.user.name;
                        document.getElementById('edit-email').value = data.user.email;
                        document.getElementById('edit-phone').value = data.user.phone;
                    }
                });
        }
    });

    // Handle Edit Form Submission (unchanged)
    const editForm = document.getElementById('edit-form');
    editForm.addEventListener('submit', async (event) => {
        event.preventDefault();

        const id = document.getElementById('edit-id').value.trim();
        const name = document.getElementById('edit-name').value.trim();
        const email = document.getElementById('edit-email').value.trim();
        const phone = document.getElementById('edit-phone').value.trim();

        const data = { name, email, phone };

        try {
            const response = await fetch(`/users/${id}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(data),
            });
            const result = await response.json();

            if (result.success) {
                const editUserModalElement = document.getElementById('editUserModal');
                const editUserModal = bootstrap.Modal.getInstance(editUserModalElement);
                editUserModal.hide();

                // Update the row in the table
                const rowToUpdate = usersList.querySelector(`tr[data-id="${id}"]`);
                rowToUpdate.innerHTML = `
                    <td>${name}</td>
                    <td>${email}</td>
                    <td>${phone}</td>
                    <td>
                        <button class="btn btn-sm btn-outline-danger edit-btn" data-id="${id}" data-bs-toggle="modal" data-bs-target="#editUserModal">
                            <i class="bi bi-pencil-fill"></i> Edit
                        </button>
                        <button class="btn btn-sm btn-outline-danger delete-btn" data-id="${id}">
                            <i class="bi bi-trash-fill"></i> Delete
                        </button>
                    </td>
                `;
            }
        } catch (error) {
            console.error('Error:', error);
        }
    });
});
 

    </script>
</body>
</html>
